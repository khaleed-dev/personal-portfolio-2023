{"mappings":"AAAA,MAAM,aAAa,SAAS,gBAAgB,CAAC;AAC7C,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,WAAW,OAAO,CAAC,CAAA,YAAa;IAC5B,UAAU,gBAAgB,CAAC,SAAS,SAAS,CAAC,EAAE;QAC5C,IAAI,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,oBAClB,IAAI,CAAC,aAAa,CAAC,mBAAmB,SAAS,CAAC,MAAM,CAAC;IAE/D;AACJ;AAEA,MAAM,YAAY,UAAY;IAC1B,IAAI;QACA,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,KAAK,OAAO,CAAC,CAAA,UAAW;YACpB,YAAY;QAChB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;QACZ;IACJ;AACJ;AACA;AAEA,SAAS,YAAY,OAAO,EAAC;IACzB,QAAQ,GAAG,CAAC;IACZ,MAAM,OAAO,aAAa,OAAO,CAAC,SAAS,CAAC,IAAI;IAEhD,MAAM,aAAa,KAAK,aAAa,CAAC;IACtC,WAAW,SAAS,CAAC,GAAG,CAAC,QAAQ,KAAK;IAEtC,MAAM,QAAQ,KAAK,aAAa,CAAC;IACjC,MAAM,GAAG,GAAG,CAAC,YAAY,EAAE,QAAQ,OAAO,CAAC,CAAC;IAC5C,MAAM,GAAG,GAAG,QAAQ,KAAK;IAEzB,MAAM,QAAQ,KAAK,aAAa,CAAC;IACjC,MAAM,WAAW,GAAG,QAAQ,KAAK;IAEjC,MAAM,YAAY,KAAK,aAAa,CAAC;IACrC,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,OAAS;QAC5B,IAAI,OAAO,SAAS,aAAa,CAAC,KAAK,aAAa;;QACpD,IAAI,OAAO,SAAS,aAAa,CAAC,KAAK,QAAQ;;QAE/C,KAAK,IAAI,GAAG,KAAK,GAAG;QACpB,KAAK,KAAK,GAAG,KAAK,IAAI;QACtB,KAAK,MAAM,GAAG;QACd,KAAK,SAAS,CAAC,GAAG,CAAC,MAAM,KAAK,IAAI;QAClC,KAAK,MAAM,CAAC;QAEZ,UAAU,MAAM,CAAC;QAEjB,IAAG,KAAK,IAAI,KAAK,aAAY;YACzB,QAAQ,GAAG,CAAC,SAAS;YACrB,MAAM,IAAI,GAAG,KAAK,GAAG;QACzB,CAAC;IACL;IAEA,MAAM,OAAO,KAAK,aAAa,CAAC;IAChC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,MAAQ;QAC1B,IAAI,OAAO,SAAS,aAAa,CAAC;QAClC,KAAK,WAAW,GAAG;QACnB,KAAK,MAAM,CAAC;IAChB;IAEA,UAAU,MAAM,CAAC;AACrB","sources":["client/src/js/freelance.js"],"sourcesContent":["const filterBtns = document.querySelectorAll('.filter-btn');\r\nconst itemTemplate = document.querySelector('#post-item-template');\r\nconst postsGrid = document.querySelector('.posts-grid');\r\n\r\nfilterBtns.forEach(filterBtn => {\r\n    filterBtn.addEventListener('click', function(e) {\r\n        if (!e.target.closest('.filter-options')) {\r\n            this.querySelector('.filter-options').classList.toggle('hide');\r\n        }\r\n    });\r\n});\r\n\r\nconst fetchData = async () => {\r\n    try {\r\n        const response = await fetch(\"/api/projects\");\r\n        const data = await response.json();\r\n        data.forEach(project => {\r\n            renderItems(project)\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n        return\r\n    }\r\n}\r\nfetchData()\r\n\r\nfunction renderItems(project){\r\n    console.log(project)\r\n    const item = itemTemplate.content.cloneNode(true)\r\n\r\n    const imgWrapper = item.querySelector('.post-img-wrapper')\r\n    imgWrapper.classList.add(project.class)\r\n\r\n    const image = item.querySelector('[data-img]')\r\n    image.src = `/api/images/${project.imgName}`\r\n    image.alt = project.title\r\n\r\n    const title = item.querySelector('[data-title]')\r\n    title.textContent = project.title\r\n\r\n    const postLinks = item.querySelector('.post-links')\r\n    project.links.forEach((link) => {\r\n        let aTag = document.createElement('a') //  name, url\r\n        let iTag = document.createElement('i') //  icon\r\n\r\n        aTag.href = link.url\r\n        aTag.title = link.name\r\n        aTag.target = '_blank' \r\n        iTag.classList.add('bi', link.icon)\r\n        aTag.append(iTag)\r\n\r\n        postLinks.append(aTag)\r\n\r\n        if(link.name === \"Live Demo\"){\r\n            console.log('found', link)\r\n            title.href = link.url\r\n        }\r\n    })\r\n\r\n    const tags = item.querySelector('.post-tags')\r\n    project.tags.forEach((tag) => {\r\n        let span = document.createElement('span')\r\n        span.textContent = tag\r\n        tags.append(span)\r\n    })\r\n\r\n    postsGrid.append(item)\r\n}\r\n\r\n"],"names":[],"version":3,"file":"freelance.2af9da6c.js.map","sourceRoot":"/__parcel_source_root/"}